/* tslint:disable */
/* eslint-disable */
/**
 * server
 * server
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ReviewFields,
    ReviewFieldsFromJSON,
    ReviewFieldsFromJSONTyped,
    ReviewFieldsToJSON,
    ReviewIncludeFilterItems,
    ReviewIncludeFilterItemsFromJSON,
    ReviewIncludeFilterItemsFromJSONTyped,
    ReviewIncludeFilterItemsToJSON,
} from './index';

/**
 *
 * @export
 * @interface ReviewFilter1
 */
export interface ReviewFilter1 {
    /**
     *
     * @type {number}
     * @memberof ReviewFilter1
     */
    offset?: number;
    /**
     *
     * @type {number}
     * @memberof ReviewFilter1
     */
    limit?: number;
    /**
     *
     * @type {number}
     * @memberof ReviewFilter1
     */
    skip?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof ReviewFilter1
     */
    order?: Array<string>;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof ReviewFilter1
     */
    where?: { [key: string]: object; };
    /**
     *
     * @type {ReviewFields}
     * @memberof ReviewFilter1
     */
    fields?: ReviewFields;
    /**
     *
     * @type {Array<ReviewIncludeFilterItems>}
     * @memberof ReviewFilter1
     */
    include?: Array<ReviewIncludeFilterItems>;
}

export function ReviewFilter1FromJSON(json: any): ReviewFilter1 {
    return ReviewFilter1FromJSONTyped(json, false);
}

export function ReviewFilter1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ReviewFilter1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'offset': !exists(json, 'offset') ? undefined : json['offset'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'skip': !exists(json, 'skip') ? undefined : json['skip'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'where': !exists(json, 'where') ? undefined : json['where'],
        'fields': !exists(json, 'fields') ? undefined : ReviewFieldsFromJSON(json['fields']),
        'include': !exists(json, 'include') ? undefined : ((json['include'] as Array<any>).map(ReviewIncludeFilterItemsFromJSON)),
    };
}

export function ReviewFilter1ToJSON(value?: ReviewFilter1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'offset': value.offset,
        'limit': value.limit,
        'skip': value.skip,
        'order': value.order,
        'where': value.where,
        'fields': ReviewFieldsToJSON(value.fields),
        'include': value.include === undefined ? undefined : ((value.include as Array<any>).map(ReviewIncludeFilterItemsToJSON)),
    };
}


