/* tslint:disable */
/* eslint-disable */
/**
 * server
 * server
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * (tsType: Partial<Review>, schemaOptions: { partial: true })
 * @export
 * @interface ReviewPartial
 */
export interface ReviewPartial {
    /**
     * 
     * @type {string}
     * @memberof ReviewPartial
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof ReviewPartial
     */
    rating?: number;
    /**
     * 
     * @type {string}
     * @memberof ReviewPartial
     */
    comment?: string;
    /**
     * 
     * @type {Date}
     * @memberof ReviewPartial
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof ReviewPartial
     */
    restaurantId?: string;
    /**
     * 
     * @type {string}
     * @memberof ReviewPartial
     */
    authorId?: string;
}

export function ReviewPartialFromJSON(json: any): ReviewPartial {
    return ReviewPartialFromJSONTyped(json, false);
}

export function ReviewPartialFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReviewPartial {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'rating': !exists(json, 'rating') ? undefined : json['rating'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'restaurantId': !exists(json, 'restaurantId') ? undefined : json['restaurantId'],
        'authorId': !exists(json, 'authorId') ? undefined : json['authorId'],
    };
}

export function ReviewPartialToJSON(value?: ReviewPartial | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'rating': value.rating,
        'comment': value.comment,
        'date': value.date === undefined ? undefined : (value.date.toISOString()),
        'restaurantId': value.restaurantId,
        'authorId': value.authorId,
    };
}


