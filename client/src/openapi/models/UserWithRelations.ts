/* tslint:disable */
/* eslint-disable */
/**
 * server
 * server
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserCredentialsWithRelations,
    UserCredentialsWithRelationsFromJSON,
    UserCredentialsWithRelationsFromJSONTyped,
    UserCredentialsWithRelationsToJSON,
    UserRolesEnum,
} from './index';

/**
 * (tsType: UserWithRelations, schemaOptions: { includeRelations: true })
 * @export
 * @interface UserWithRelations
 */
export interface UserWithRelations {
    /**
     *
     * @type {string}
     * @memberof UserWithRelations
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof UserWithRelations
     */
    name: string;
    /**
     *
     * @type {Array<string>}
     * @memberof UserWithRelations
     */
    roles?: Array<UserRolesEnum>;
    /**
     *
     * @type {UserCredentialsWithRelations}
     * @memberof UserWithRelations
     */
    userCredentials?: UserCredentialsWithRelations;
}

export function UserWithRelationsFromJSON(json: any): UserWithRelations {
    return UserWithRelationsFromJSONTyped(json, false);
}

export function UserWithRelationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserWithRelations {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'roles': !exists(json, 'roles') ? undefined : json['roles'],
        'userCredentials': !exists(json, 'userCredentials') ? undefined : UserCredentialsWithRelationsFromJSON(json['userCredentials']),
    };
}

export function UserWithRelationsToJSON(value?: UserWithRelations | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'id': value.id,
        'name': value.name,
        'roles': value.roles,
        'userCredentials': UserCredentialsWithRelationsToJSON(value.userCredentials),
    };
}


