/* tslint:disable */
/* eslint-disable */
/**
 * server
 * server
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RestaurantFields,
    RestaurantFieldsFromJSON,
    RestaurantFieldsFromJSONTyped,
    RestaurantFieldsToJSON,
    RestaurantIncludeFilterItems,
    RestaurantIncludeFilterItemsFromJSON,
    RestaurantIncludeFilterItemsFromJSONTyped,
    RestaurantIncludeFilterItemsToJSON,
} from './index';

/**
 *
 * @export
 * @interface RestaurantFilter
 */
export type RestaurantFilter = {
    /**
     *
     * @type {number}
     * @memberof RestaurantFilter
     */
    offset?: number;
    /**
     *
     * @type {number}
     * @memberof RestaurantFilter
     */
    limit?: number;
    /**
     *
     * @type {number}
     * @memberof RestaurantFilter
     */
    skip?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof RestaurantFilter
     */
    order?: Array<string>;
    /**
     *
     * @type {RestaurantFields}
     * @memberof RestaurantFilter
     */
    fields?: RestaurantFields;
    /**
     *
     * @type {Array<RestaurantIncludeFilterItems>}
     * @memberof RestaurantFilter
     */
    include?: Array<RestaurantIncludeFilterItems>;
}

export function RestaurantFilterFromJSON(json: any): RestaurantFilter {
    return RestaurantFilterFromJSONTyped(json, false);
}

export function RestaurantFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestaurantFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'offset': !exists(json, 'offset') ? undefined : json['offset'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'skip': !exists(json, 'skip') ? undefined : json['skip'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'fields': !exists(json, 'fields') ? undefined : RestaurantFieldsFromJSON(json['fields']),
        'include': !exists(json, 'include') ? undefined : ((json['include'] as Array<any>).map(RestaurantIncludeFilterItemsFromJSON)),
    };
}

export function RestaurantFilterToJSON(value?: RestaurantFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'offset': value.offset,
        'limit': value.limit,
        'skip': value.skip,
        'order': value.order,
        'fields': RestaurantFieldsToJSON(value.fields),
        'include': value.include === undefined ? undefined : ((value.include as Array<any>).map(RestaurantIncludeFilterItemsToJSON)),
    };
}


