/* tslint:disable */
/* eslint-disable */
/**
 * server
 * server
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ReviewScopeFilter
 */
export type ReviewScopeFilter = {
    /**
     *
     * @type {number}
     * @memberof ReviewScopeFilter
     */
    offset?: number;
    /**
     *
     * @type {number}
     * @memberof ReviewScopeFilter
     */
    limit?: number;
    /**
     *
     * @type {number}
     * @memberof ReviewScopeFilter
     */
    skip?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof ReviewScopeFilter
     */
    order?: Array<string>;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof ReviewScopeFilter
     */
    where?: runtime.HTTPQuery;
    /**
     *
     * @type {{ [key: string]: object; }}
     * @memberof ReviewScopeFilter
     */
    fields?: runtime.HTTPQuery;
}

export function ReviewScopeFilterFromJSON(json: any): ReviewScopeFilter {
    return ReviewScopeFilterFromJSONTyped(json, false);
}

export function ReviewScopeFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReviewScopeFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {

        'offset': !exists(json, 'offset') ? undefined : json['offset'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'skip': !exists(json, 'skip') ? undefined : json['skip'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'where': !exists(json, 'where') ? undefined : json['where'],
        'fields': !exists(json, 'fields') ? undefined : json['fields'],
    };
}

export function ReviewScopeFilterToJSON(value?: ReviewScopeFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {

        'offset': value.offset,
        'limit': value.limit,
        'skip': value.skip,
        'order': value.order,
        'where': value.where,
        'fields': value.fields,
    };
}


